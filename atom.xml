<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>白驹过夕丶</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://forestart.github.io/"/>
  <updated>2018-07-16T03:25:43.306Z</updated>
  <id>http://forestart.github.io/</id>
  
  <author>
    <name>forestart</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>float和double的精度和在计算机中的显示</title>
    <link href="http://forestart.github.io/2018/07/16/float%E5%92%8Cdouble%E7%9A%84%E7%B2%BE%E5%BA%A6%E5%92%8C%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%98%BE%E7%A4%BA/"/>
    <id>http://forestart.github.io/2018/07/16/float和double的精度和在计算机中的显示/</id>
    <published>2018-07-16T03:09:40.000Z</published>
    <updated>2018-07-16T03:25:43.306Z</updated>
    
    <content type="html"><![CDATA[<h3 id="float与double的范围"><a href="#float与double的范围" class="headerlink" title="float与double的范围"></a>float与double的范围</h3><p>float与double的范围是由指数的位数来决定的,float指数为有8位,而double的指数为有11位,分布如下:</p><p>float:1 bit(符号位),8 bits(指数位),23 bits(尾数位)<br>double:1 bit(符号位),11 bits(指数位),52 bits(尾数位)</p><p>在数学中,浮点数的基本表达法为:<br>(浮点)数值=尾数*底数^指数,(附加正负号)</p><p>于是，float的指数范围为-127~128，而double的指数范围为-1023~1024，并且指数位是按补码的形式来划分的。其中负指数决定了浮点数所能表达的绝对值最小的数；而正指数决定了浮点数所能表达的绝对值最大的数，也即决定了浮点数的取值范围。</p><p>float的范围为-2^128 ~ +2^128，也即-3.40E+38 ~ +3.40E+38；double的范围为-2^1024 ~ +2^1024，也即-1.79E+308 ~ +1.79E+308。</p><h3 id="float与double的精度"><a href="#float与double的精度" class="headerlink" title="float与double的精度"></a>float与double的精度</h3><p>float和double的精度是由尾数的位数来决定的。浮点数在内存中是按科学计数法来存储的，其整数部分始终是一个隐含着的“1”，由于它是不变的，故不能对精度造成影响。</p><p>float：2^23 = 8388608，一共七位，这意味着最多能有7位有效数字，但绝对能保证的为6位，也即float的精度为6~7位有效数字；</p><p>double：2^52 = 4503599627370496，一共16位，同理，double的精度为15~16位。</p><p>###总结<br>无论是单精度还是双精度在存储中都分为三个部分：</p><p>1、符号位(Sign) : 0代表正，1代表为负<br>2、指数位（Exponent）:用于存储科学计数法中的指数数据，并且采用移位存储<br>3、尾数部分（Mantissa）：尾数部分</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;float与double的范围&quot;&gt;&lt;a href=&quot;#float与double的范围&quot; class=&quot;headerlink&quot; title=&quot;float与double的范围&quot;&gt;&lt;/a&gt;float与double的范围&lt;/h3&gt;&lt;p&gt;float与double的范围是由指
      
    
    </summary>
    
    
      <category term="浮点数" scheme="http://forestart.github.io/tags/%E6%B5%AE%E7%82%B9%E6%95%B0/"/>
    
      <category term="计算机表示" scheme="http://forestart.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A1%A8%E7%A4%BA/"/>
    
  </entry>
  
  <entry>
    <title>心情随笔</title>
    <link href="http://forestart.github.io/2018/07/16/%E5%BF%83%E6%83%85%E9%9A%8F%E7%AC%94/"/>
    <id>http://forestart.github.io/2018/07/16/心情随笔/</id>
    <published>2018-07-16T02:43:50.000Z</published>
    <updated>2018-07-16T03:06:01.811Z</updated>
    
    <content type="html"><![CDATA[<h3 id="5个月没更新的原因"><a href="#5个月没更新的原因" class="headerlink" title="5个月没更新的原因"></a>5个月没更新的原因</h3><p>当然是摸鱼啦，(ノ｀Д)ノ，其实就是忘记了博客这个东西，忽然兴趣使然才想起更新，（说起来我当初还买了个域名是为了什么，浪费我一瓶水钱o(╥﹏╥)o）<br>总而言之，事情太多是个理由，毕业时的迷茫期也是一个理由，现在终于安定下来准备好好工作的我，思维又开始活跃起来准备考研了，当初我大三的时候在干啥(ノ｀Д)ノ，希望这次能下定决心，不要3分钟热度了，考上自己理想的学校，找到目标，是为了以后更好的摸鱼（咸鱼是这样的啊）。</p><h3 id="以后的规划"><a href="#以后的规划" class="headerlink" title="以后的规划"></a>以后的规划</h3><p>纠结了3-4天，脑海里一直在研究考研的可行性，咸鱼也是要有梦想的啊，就算是个咸鱼我也要变成最咸的那一条，昨天心血来潮买了一堆复习资料，希望到时候不是买废纸的结局（忽然发现这篇随笔好像还是个flag），早上英语，晚上数学，上班摸鱼做算法，学学数据结构。完成自己的规划，steam,wegame卸载，（Ps4启动(ノ｀Д)ノ），希望明年在看这篇文章的时候我已经在研究室里摸鱼了</p><h3 id="更新方面"><a href="#更新方面" class="headerlink" title="更新方面"></a>更新方面</h3><p>gal博文写了一篇，就开始没有了兴致（老咸鱼代表：3分钟热度），由于要考研复习的原因(其实就是不想写了)，天坑先摆在这了，更新随缘。<br>日常遇到的问题记录，这个是个新坑（记得每天更新哦，没问题也给我写个事毕，与朋友打牌什么的）<br>相关知识记录，把白天学到的专业相关的东西做一个记录，既然不想动笔就动动自己的手指吧（唯一的运动）</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>不再摸鱼，记得更新，做最咸的那条咸鱼。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;5个月没更新的原因&quot;&gt;&lt;a href=&quot;#5个月没更新的原因&quot; class=&quot;headerlink&quot; title=&quot;5个月没更新的原因&quot;&gt;&lt;/a&gt;5个月没更新的原因&lt;/h3&gt;&lt;p&gt;当然是摸鱼啦，(ノ｀Д)ノ，其实就是忘记了博客这个东西，忽然兴趣使然才想起更新，（说
      
    
    </summary>
    
    
      <category term="咸鱼的心情记录" scheme="http://forestart.github.io/tags/%E5%92%B8%E9%B1%BC%E7%9A%84%E5%BF%83%E6%83%85%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>MVC模型</title>
    <link href="http://forestart.github.io/2018/02/05/MVC%E6%A8%A1%E5%9E%8B/"/>
    <id>http://forestart.github.io/2018/02/05/MVC模型/</id>
    <published>2018-02-05T02:40:42.000Z</published>
    <updated>2018-02-05T03:19:17.871Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、Web开发中的请求-响应模型"><a href="#一、Web开发中的请求-响应模型" class="headerlink" title="一、Web开发中的请求-响应模型"></a>一、Web开发中的请求-响应模型</h3><p><img src="/images/response.png" alt="response"><br>　　在Web世界里，具体步骤如下：</p><p>　　1、Web浏览器（如IE）发起请求，如访问<a href="http://www.iteye.com/" target="_blank" rel="noopener">http://www.iteye.com/</a></p><p>　　2、Web服务器（如Tomcat）接收请求，处理请求（比如用户新增，则将把用户保存一下），最后产生响应（一般为html）。</p><p>　　3、web服务器处理完成后，返回内容给web客户端（一般就是我们的浏览器），客户端对接收的内容进行处理（如web浏览器将会对接收到的html内容进行渲染以展示给客户）。</p><p>　　因此，在Web世界里：都是Web客户端发起请求，Web服务器接收、处理并产生响应。</p><p>　　一般Web服务器是不能主动通知Web客户端更新内容。虽然现在有些技术如服务器推（如Comet）、还有现在的HTML5 websocket可以实现Web服务器主动通知Web客户端。</p><p>　　到此我们了解了在web开发时的请求/响应模型，接下来我们看一下标准的MVC模型是什么。</p><h3 id="2、标准MVC模型概述"><a href="#2、标准MVC模型概述" class="headerlink" title="2、标准MVC模型概述"></a>2、标准MVC模型概述</h3><p>　　MVC模型：是一种架构型的模式，本身不引入新功能，只是帮助我们将开发的结构组织的更加合理，使展示与模型分离、流程控制逻辑、业务逻辑调用与展示逻辑分离。如下图所示：<br><img src="/images/MVC.png" alt="MVC"></p><h3 id="二、MVC-Model-View-Controller-的概念"><a href="#二、MVC-Model-View-Controller-的概念" class="headerlink" title="二、MVC(Model-View-Controller)的概念"></a>二、MVC(Model-View-Controller)的概念</h3><p>首先让我们了解下MVC（Model-View-Controller）的概念：</p><p>　　Model（模型）：数据模型，提供要展示的数据，因此包含数据和行为，可以认为是领域模型(domain)或JavaBean组件（包含数据和行为），不过现在一般都分离开来：Value Object（数据） 和 服务层（行为）。也就是模型提供了模型数据查询和模型数据的状态更新等功能，包括数据和业务。</p><p>　　View（视图）：负责进行模型的展示，一般就是我们见到的用户界面，客户想看到的东西。</p><p>　　Controller（控制器）：接收用户请求，委托给模型进行处理（状态改变），处理完毕后把返回的模型数据返回给视图，由视图负责展示。 也就是说控制器做了个调度员的工作。</p><p>　　从图2-1我们还看到，在标准的MVC中模型能主动推数据给视图进行更新（观察者设计模式，在模型上注册视图，当模型更新时自动更新视图），但在Web开发中模型是无法主动推给视图（无法主动更新用户界面），因为在Web开发是请求-响应模型。</p><p>　　那接下来我们看一下在Web里MVC是什么样子，我们称其为 Web MVC 来区别标准的MVC。</p><h3 id="三、Web-MVC概述"><a href="#三、Web-MVC概述" class="headerlink" title="三、Web MVC概述"></a>三、Web MVC概述</h3><p>　　Web MVC中的M(模型)-V(视图)-C(控制器)概念和标准MVC概念一样，我们再看一下Web MVC标准架构，如下图所示：<br><img src="/images/WebMVC.png" alt="WebMVC"><br>　　在Web MVC模式下，模型无法主动推数据给视图，如果用户想要视图更新，需要再发送一次请求（即请求-响应模型）。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、Web开发中的请求-响应模型&quot;&gt;&lt;a href=&quot;#一、Web开发中的请求-响应模型&quot; class=&quot;headerlink&quot; title=&quot;一、Web开发中的请求-响应模型&quot;&gt;&lt;/a&gt;一、Web开发中的请求-响应模型&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/ima
      
    
    </summary>
    
    
      <category term="Java Web" scheme="http://forestart.github.io/tags/Java-Web/"/>
    
  </entry>
  
  <entry>
    <title>JSP作用域</title>
    <link href="http://forestart.github.io/2018/01/31/JSP%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
    <id>http://forestart.github.io/2018/01/31/JSP作用域/</id>
    <published>2018-01-31T00:47:00.000Z</published>
    <updated>2018-01-31T08:02:20.894Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JSP属性范围"><a href="#JSP属性范围" class="headerlink" title="JSP属性范围"></a>JSP属性范围</h3><p>所谓的属性范围就是一个属性设置之后，可以经过多少个其他页面后仍然可以访问的保存范围。</p><p>JSP中提供了四种属性范围，四种属性范围分别指以下四种：</p><p>   1、<font color="#FF0000"> 当前页(page)</font> ：一个属性只能在一个页面中取得，跳转到其他页面无法取得<br>   2、<font color="#FF0000"> 一次服务器请求(request)</font> ：一个页面中设置的属性，只要经过了服务器跳转，则跳转之后的页面可以继续取得。<br>   3、<font color="#FF0000"> 一次会话(session)</font>：一个用户设置的内容，只要是与此用户相关的页面都可以访问（一个会话表示一个人，这个人设置的东西只要这个人不走，就依然有效）<br>   4、<font color="#FF0000"> 上下文中(application)</font>：在整个服务器上设置的属性，所有人都可以访问</p><h3 id="jsp四种属性范围的使用场合"><a href="#jsp四种属性范围的使用场合" class="headerlink" title="jsp四种属性范围的使用场合"></a>jsp四种属性范围的使用场合</h3><p>1、<font color="#FF0000">request</font>：如果客户向服务器发请求，产生的数据，用户看完就没用了，像这样的数据就存在request域,像新闻数据，属于用户看完就没用的。<br>2、<font color="#FF0000">session</font>：如果客户向服务器发请求，产生的数据，用户用完了等一会儿还有用，像这样的数据就存在session域中，像购物数据，用户需要看到自己购物信息，并且等一会儿，还要用这个购物数据结帐。<br>3、<font color="#FF0000">application(servletContext)</font>：如果客户向服务器发请求，产生的数据，用户用完了，还要给其它用户用，像这样的数据就存在application(servletContext)域中，像聊天数据。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;JSP属性范围&quot;&gt;&lt;a href=&quot;#JSP属性范围&quot; class=&quot;headerlink&quot; title=&quot;JSP属性范围&quot;&gt;&lt;/a&gt;JSP属性范围&lt;/h3&gt;&lt;p&gt;所谓的属性范围就是一个属性设置之后，可以经过多少个其他页面后仍然可以访问的保存范围。&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
    
      <category term="Java Web" scheme="http://forestart.github.io/tags/Java-Web/"/>
    
      <category term="JSP学习" scheme="http://forestart.github.io/tags/JSP%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>夏空のペルセウス</title>
    <link href="http://forestart.github.io/2018/01/18/%E5%A4%8F%E7%A9%BA%E3%81%AE%E3%83%9A%E3%83%AB%E3%82%BB%E3%82%A6%E3%82%B9/"/>
    <id>http://forestart.github.io/2018/01/18/夏空のペルセウス/</id>
    <published>2018-01-18T08:59:18.000Z</published>
    <updated>2018-01-25T07:10:11.728Z</updated>
    
    <content type="html"><![CDATA[<h3 id="游戏介绍"><a href="#游戏介绍" class="headerlink" title="游戏介绍:"></a>游戏介绍:</h3><p>夏空のペルセウス是由minori公司于2012年12月21日发行的恋爱冒险游戏。副标题为「The brave under the summer sky」。<br>游戏从7月的一天，行走在山道间的巴士中，远野森罗（とおの しんら）和妹妹远野恋（とおの れん）正发生着口角开始。</p><h3 id="故事情节"><a href="#故事情节" class="headerlink" title="故事情节:"></a>故事情节:</h3><p>「又来了，别去管那么多闲事可以吗」<br>「啊啊」<br> 这对兄妹，拥有将他人的伤痛“转移”至自身的能力。<br> 无法“治愈”，只能“转移”的无用能力。<br> 但是，森罗依旧认为这份力量一定有其意义所在。</p><p> 他们从小无依无靠，在因这份力量而不断地被利用的环境下长大。<br> 他们辗转于各亲戚家中，在自己的能力为周围所知后，一次又一次地被利用，直至失去容身之所。<br> 面对妹妹「这回可一定要注意喔」的叮嘱，森罗只是机械地以「知道了」回答。<br>「真是的，有在听吗」<br> 数经转乘巴士，最后到达的，是远房亲戚所在的天领村（てんりょうむら）。<br> 这里是三面环山，向日葵遍野的偏僻山村。<br> 在初次见面的远亲少女皆川翠（みなかわ すい）的带领下，两人参观了隔日即将转入的校园。<br> 这座少子化日趋严重的村庄，如今已面临多个年级在同一间教室上课的现状。<br> 在这里，还邂逅了爱书少女菱田菖蒲（ひしだあやめ），以及浮现着天使般微笑的沢渡透香（さわたり とうか）。</p><p> 在担当村子顾问的翠的父亲推荐下，远野兄妹住进了村内神社的管理所。<br> 这样做的原因是由于管理人的暂离，需要年轻劳动力——同时，恐怕也是作为这对村外人拉开距离进行观察的处置吧。<br> 不过，对于只要与人接触便能将伤痛“转移”的兄妹而言，不如说是理想的状态。</p><p> 风铃、向日葵田、建有望楼的高台。时间在夏日的山村中平稳流逝。<br> 渐渐地，得知了身边的少女们，心中各怀的“痛苦”。<br> 血缘相连的妹妹恋，因小时候的遭遇，不相信他人，依存着哥哥森罗；<br> 远亲的少女翠，腿上有伤，心中更有对日益萎缩的村子的担忧与对外界的排斥；<br> 爱书的学姐菖蒲，心中留有交通事故中父母双亡的深刻创伤；<br> 特别是，浮现出天使般微笑的名唤透香的少女，对森罗而言属于异质的存在。只是轻触便会产生猛烈的“痛苦”，仿佛有股漆黑的浊流涌入。</p><p> 胸怀各自的“痛苦”，爱与牺牲交织的羁绊物语，宣告开幕——<br> <img src="/images/1.jpg" alt="startTitle"></p><h3 id="STAFF"><a href="#STAFF" class="headerlink" title="STAFF:"></a>STAFF:</h3><p> 监督：酒井伸和<br> 美术总监：姿月景<br> 原画：柚子奈ひよ、高崎まこ、庄名泉石<br> 剧本：御影、镜游、竹田<br> 音乐：天门、柳英一朗</p><h3 id="CAST"><a href="#CAST" class="headerlink" title="CAST:"></a>CAST:</h3><p> 远野恋（遠野 恋（とおの れん））CV：楠原ゆい<br> <img src="/images/とおの れん.jpg" alt="とおの れん"><br> 皆川翠（皆川 翠（みなかわ すい））CV：立花あおい<br> <img src="/images/みなかわ すい.jpg" alt="みなかわ すい"><br> 菱田菖蒲（菱田 あやめ（ひしだ あやめ））CV：桜井美鈴<br> <img src="/images/ひしだ あやめ.jpg" alt="ひしだ あやめ"><br> 泽渡透香（沢渡 透香（さわたり とうか））CV：市川ひなこ<br> <img src="/images/さわたり とうか.jpg" alt="さわたり とうか"></p><h3 id="相关音乐"><a href="#相关音乐" class="headerlink" title="相关音乐:"></a>相关音乐:</h3><p>OP “The Brave Under The Summer Sky.”<br> 词：酒井伸和 / 曲、编曲：天门 / 歌：原田瞳<br>（恋线）ED “ずっと すき”<br> 词：海野みすず / 曲：天门 / 编曲：柳英一朗 / 歌：nerine<br>（翠线）ED “同じ空の下”<br> 词：柳英一郎 / 曲、编曲：柳英一朗 / 歌：nerine<br>（菖蒲线）ED “ねむり姫が目覚めた時に”<br> 词：海野みすず / 曲：天门 / 编曲：柳英一朗 / 歌：nerine<br>（透香线）ED “星を摑んで”<br> 词：酒井伸和 / 曲：天门 / 编曲：柳英一朗 / 歌：nerine<br> <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=29132645&auto=1&height=66"></iframe></p><h3 id="游玩感想"><a href="#游玩感想" class="headerlink" title="游玩感想:"></a>游玩感想:</h3><p> 很早以前就无汉化时就遗存的游戏，由于时间受限(我才不会说我是在专心摸鱼╮(╯▽╰)╭),这次也就通了远野恋线(并不是因为缘之空)，也许是应为只推了一条线的缘故感觉剧情觉短，等继续推完以后我在做个总体感想吧. PS:反正无限摸鱼,相信也没几个人看，等兴趣使然继续更新<br> <img src="/images/end.jpg" alt="end"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;游戏介绍&quot;&gt;&lt;a href=&quot;#游戏介绍&quot; class=&quot;headerlink&quot; title=&quot;游戏介绍:&quot;&gt;&lt;/a&gt;游戏介绍:&lt;/h3&gt;&lt;p&gt;夏空のペルセウス是由minori公司于2012年12月21日发行的恋爱冒险游戏。副标题为「The brave under
      
    
    </summary>
    
    
      <category term="gal介绍" scheme="http://forestart.github.io/tags/gal%E4%BB%8B%E7%BB%8D/"/>
    
      <category term="minori" scheme="http://forestart.github.io/tags/minori/"/>
    
      <category term="中二社" scheme="http://forestart.github.io/tags/%E4%B8%AD%E4%BA%8C%E7%A4%BE/"/>
    
  </entry>
  
  <entry>
    <title>Azaka</title>
    <link href="http://forestart.github.io/2018/01/17/Azaka/"/>
    <id>http://forestart.github.io/2018/01/17/Azaka/</id>
    <published>2018-01-17T07:33:40.000Z</published>
    <updated>2018-02-01T00:49:01.184Z</updated>
    
    <content type="html"><![CDATA[<p>黒桐(こくとう) 鮮花(あざか)<br><img src="/images/Azaka.jpeg" alt="Azaka"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;黒桐(こくとう) 鮮花(あざか)&lt;br&gt;&lt;img src=&quot;/images/Azaka.jpeg&quot; alt=&quot;Azaka&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="CG" scheme="http://forestart.github.io/tags/CG/"/>
    
      <category term="空の境界" scheme="http://forestart.github.io/tags/%E7%A9%BA%E3%81%AE%E5%A2%83%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://forestart.github.io/2018/01/17/hello-world/"/>
    <id>http://forestart.github.io/2018/01/17/hello-world/</id>
    <published>2018-01-17T05:27:13.070Z</published>
    <updated>2018-01-17T05:27:13.070Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
